<?php//// Конттроллер материалов//class C_Docs extends C_Admin_Base{	//	// Конструктор.	//	public function __construct(){		parent::__construct();	}		public function before(){		parent::before();	}		public function action_index(){		$this->action_all();	}		public function action_all(){		$this->title .= 'Документы';			$doc_num = isset($this->params[2]) ? (int)$this->params[2] : 1;		$mPagination = new M_Pagination('docs', '/docs/all/');		$docs = $mPagination->on_page(5)->page_num($doc_num)->page();				$navbar = $this->Template('v/v_navbar.php', array('navparams' => $mPagination->navparams()));		$this->content = $this->Template('v/docs/v_all.php', array('docs' => $docs,																   'navparams' => $mPagination->navparams(),																   'navbar' => $navbar));;	}		public function action_add(){		$this->title .= '::Добавить документ';			$this->scripts[] = 'fileuploader';		$this->scripts[] = 'onload';		$mDocs = M_Docs::Instance();				$errors = array();		$fields = array('is_show' => 'on');				if($this->isPost())		{			if(M_Session::has('done'))			{				$_POST['path'] = M_Session::slice('done');				$getMime = explode('.', $_POST['path']);				$_POST['type'] = end($getMime);								if($mDocs->add($_POST))					$this->redirect('/docs/');			}									$errors = $mDocs->errors();			$fields = $_POST;		}			$this->content = $this->Template('v/docs/v_add.php',  array('fields' => $fields, 					'errors' => $errors));		}		public function action_edit(){		$this->title .= '::Редактирование документа';			$mDocs = M_Docs::Instance();		$errors = array();		$id_doc = (int)$this->params[2];		$fields = $mDocs->get($id_doc);				if($this->isPost())		{			if(isset($_POST['save'])){				if($mDocs->edit($id_doc, $_POST))					$this->redirect('/docs/');			}			elseif(isset($_POST['delete'])){				$mDocs->delete($id_doc);				$this->redirect('/docs/');			}						$errors = $mDocs->errors();			$fields = $_POST;		}						$this->content = $this->Template('v/docs/v_edit.php',  			array('fields' => $fields, 'errors' => $errors));		}		public function action_delete(){        if($this->IsGet()){            M_Docs::Instance()->delete($this->params[2]);            $this->redirect($_SERVER['HTTP_REFERER']); // т.к. удалять можем на разных страницах        }    }		public function action_upload(){		if((M_Docs::Instance()->check_type($_POST['name'])) == -1)			die('0');		$_SESSION['hash'] = M_Helpers::get_hash($_POST['name'] . time());		$_SESSION['name'] = M_Helpers::unique_name(DOCS_DIR, $_POST['name'], true);		$_SESSION['uploaddir'] = DOCS_DIR;		die('1');	}}