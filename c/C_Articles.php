<?php//// Конттроллер страниц.//class C_Articles extends C_Admin_Base{	//	// Конструктор.	//	public function __construct(){		parent::__construct();	}		public function before(){		parent::before();	}		public function action_index(){		$this->action_all();	}		public function action_all(){		$this->title .= '::Новости';			$art_num = isset($this->params[2]) ? (int)$this->params[2] : 1;		$mPagination = new M_Pagination('articles', '/articles/all/');		$articles = $mPagination->on_page(5)->page_num($art_num)->page();				$navbar = $this->Template('v/v_navbar.php', array('navparams' => $mPagination->navparams()));		$this->content = $this->Template('v/articles/v_all.php', array('articles' => $articles,																	   'navparams' => $mPagination->navparams(),																	   'navbar' => $navbar));	}	public function action_add(){		$this->title .= '::Добавление статьи';		$this->scripts[] = 'ckeditor/ckeditor';		$this->scripts[] = 'ck_init';		$this->scripts[] = 'datepicker_all';			$errors = array();		$mArticles = M_Articles::Instance();				$fields = array('dt' => date("Y-m-d"));				if($this->isPost())		{			if($mArticles->add(array_merge($_POST, $_FILES)))				$this->redirect('/articles');							$errors = $mArticles->errors();			$fields = $_POST;		}			$this->content = $this->Template('v/articles/v_add.php',  array('fields' => $fields,										 'errors' => $errors));		}		public function action_edit(){		$this->title .= '::Редактирование статьи';		$this->scripts[] = 'ckeditor/ckeditor';		$this->scripts[] = 'ck_init';		$this->scripts[] = 'datepicker_all';			$errors = array();		$mArticles = M_Articles::Instance();		$id_article = (int)$this->params[2];				if($this->isPost())		{				if($mArticles->edit($id_article, array_merge($_POST, $_FILES)))				$this->redirect('/articles');			$errors = $mArticles->errors();			$fields = $_POST;		}		else			$fields = $mArticles->get($id_article);				$this->content = $this->Template('v/articles/v_edit.php',  array('fields' => $fields, 			'image' => M_Images::Instance()->get($fields['id_image']), 			'errors' => $errors));		}	public function action_delete(){        if($this->IsGet())        {            M_Articles::Instance()->delete($this->params[2]);            $this->redirect($_SERVER['HTTP_REFERER']); // т.к. удалять можем на разных страницах        }    }    public function action_remove(){        if($this->IsGet())        {            M_Articles::Instance()->remove($this->params[2]);            $this->redirect($_SERVER['HTTP_REFERER']); // т.к. удалять можем на разных страницах        }    }    public function action_restore(){        if($this->IsGet())        {            M_Articles::Instance()->restore($this->params[2]);            $this->redirect($_SERVER['HTTP_REFERER']); // т.к. удалять можем на разных страницах        }    }}