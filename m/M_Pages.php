<?phpclass M_Pages extends M_Model{	private static $instance;	// ıêçåìïëÿğ êëàññà	public static function Instance()	{		if (self::$instance == null)			self::$instance = new M_Pages();					return self::$instance;	}		public function __construct(){		parent::__construct('pages', 'id_page');	}	public function get($id)	{		$id = (int)$id;		$res = $this->db->Select("SELECT * FROM pages WHERE id_page = '$id'");		return $res[0];	}		public function getByUrl($url)	{		$url = mysql_real_escape_string($url);		$res = $this->db->Select("SELECT * FROM pages WHERE full_cache_url = '$url' AND is_show='1'");		return $res[0];	}		public function getByParent($id_parent)	{		$id_parent = (int)$id_parent;		return $this->db->Select("SELECT * FROM pages WHERE id_parent = '$id_parent' 			AND is_show='1' ORDER BY children_sort ASC");	}		public function make_tree($start_level = 0)	{		$map = array();				$pages = $this->db->Select("SELECT * FROM pages WHERE id_parent = '$start_level'									ORDER BY children_sort, id_page ASC");				if(!empty($pages))			foreach($pages as $page)			{				$page['children'] = $this->make_tree($page['id_page']);				$map[] = $page;			}		return $map;	}		public function add($fields)	{			$fields['full_cache_url'] = $this->make_full_url($fields['id_parent'], $fields['url']); 		return parent::add($fields);	}		public function edit($id_page, $fields)	{	 				if(isset($fields['url'])) // İÒÀ ÏĞÎÂÅĞÊÀ ÍÓÆÍÀ ÎÁßÇÀÒÅËÜÍÎ, ×ÒÎÁÛ ÍÅ ÇÀÒÈĞÀËÎÑÜ ÏÎËÅ 'full_cache_url'			$fields['full_cache_url'] = $this->make_full_url($fields['id_parent'], $fields['url']); 				$id_page = (int)$id_page;				if(!parent::edit($id_page, $fields))			return false;				$pages = isset($fields['pages']) ? explode(',', $fields['pages']) : array();		$this->change_url($id_page);				$obj = array();				for($i = 0; $i < count($pages); $i++)		{			$id_page = (int)$pages[$i];			$where = "id_page='$id_page'";			$obj['children_sort'] = $i;			$this->db->Update('pages', $obj, $where);		}				return true;	}		private function change_url($id_parent)	{		$children = $this->db->Select("SELECT * FROM pages WHERE id_parent = '$id_parent'");		$page = array();				foreach($children as $child)		{			$page['full_cache_url'] = $this->make_full_url($child['id_parent'], $child['url']);			$where = "id_page = '{$child['id_page']}'";			$this->db->Update('pages', $page, $where);			$this->change_url($child['id_page']);		}	}		private function make_full_url($id_parent, $url){				if($id_parent == 0)			return $url;				$page = $this->get($id_parent);		return $page['full_cache_url'] . '/' .  $url;	}}